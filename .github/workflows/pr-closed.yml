name: PR Closed Cleanup

on:
  pull_request:
    types: [closed]

# WARNING this variable needs to have the same logic as the CICD for PR deployment
env:
  ResourceGroupName: MyShuttle-${{ github.event.repository.id }}-pr-${{ github.event.number }}

jobs:
  destroyprenvironment:
    name: Destroy PR Environment

    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write
      pull-requests: write

    steps:
      - uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get Token To delete environment
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v2
        with:
          application_id: ${{ secrets.PERMISSIONS_APP_ID }}
          application_private_key: ${{ secrets.PERMISSIONS_APP_PRIVATE_KEY }}

      - name: print actor
        run: echo '${{ github.actor }}'

      - name: delete environment
        run: |
          if gh api /repos/${{ github.repository}}/environments/pull-request-${{ github.event.number }} ; then
            gh api --method DELETE /repos/${{ github.repository}}/environments/pull-request-${{ github.event.number }}
          fi
        env:
          GH_TOKEN: ${{ steps.get_workflow_token.outputs.token }}

      - name: delete deployments
        run: |

          gh api --paginate "/repos/$repository/deployments" --jq '.[] | select(.environment = "pull-request-${{ github.event.number }}") | .id' | while read -r deploymentid ;
          do
              echo "Deleting deployment $deploymentid"
              gh api --method DELETE "/repos/$repository/deployments/$deploymentid"
          done
        env:
          GH_TOKEN: ${{ steps.get_workflow_token.outputs.token }}

      - name: Delete Resource Group ${{ env.ResourceGroupName }} if exists
        uses: Azure/cli@v1
        with:
          inlineScript: |
             if [ "$(az group exists --name ${{ env.ResourceGroupName }})" = "true" ]; then
                echo 'deleting ${{ env.ResourceGroupName }} resource group (non blocking)'
                az group delete --name "${{ env.ResourceGroupName }}" --yes --no-wait
             fi

      - uses: marocchino/sticky-pull-request-comment@v2
        if: always()
        with:
          header: url
          append: true
          message: |
            :tada: Sorry, the environment has now been destroyed since the PR has been closed. :scissors:





